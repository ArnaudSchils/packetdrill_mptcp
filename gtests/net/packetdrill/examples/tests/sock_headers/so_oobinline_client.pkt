/* mptcp v0.88
 * Client side of Out of band test. 
 * 
 */

// create a socket
0.000 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
+0.000 fcntl(3, F_GETFL) = 0x2 (flags O_RDWR)
+0.000 fcntl(3, F_SETFL, O_RDWR|O_NONBLOCK) = 0

// Establish connection and verify that there was no error.
+0.0 connect(3, ..., ...) = -1 EINPROGRESS (Operation now in progress)
+0.0 > S 0:0(0) win 29200 <mss 1460,sackOK,TS val 100 ecr 0,nop,wscale 7,mp_capable a> 
+0.0 < S. 0:0(0) ack 1 win 5792 <mss 1460,sackOK,TS val 700 ecr 100,nop,wscale 7,mp_capable b> 
+0.0 > . 1:1(0) ack 1 win 457 <nop,nop,TS val 100 ecr 700,mp_capable a b, dss dack4=trunc_r64_hmac(b)+1> 
0.200 getsockopt(3, SOL_SOCKET, SO_ERROR, [0], [4]) = 0
0.200 fcntl(3, F_SETFL, O_RDWR) = 0   // set back to blocking

//+0 setsockopt(3, SOL_SOCKET, SO_OOBINLINE, [1], 8) = 0

// Write some data, receive an ACK
+0 send(3, ..., 1000, MSG_OOB) = 1000
+0 > P. 1:1001(1000) ack 1 win 457 <nop,nop,TS val 200 ecr 700, dss dack4 dsn4>
+0 < . 1:1(0) ack 1001 win 257 <nop,nop,TS val 800 ecr 200, dss dack4>

+0 < PU. 1:1001(1000) ack 1 win 457 <dss dack4 dsn4>
+0 > . 1001:1001(0) ack 1001 win 472 <nop,nop,TS val 150 ecr 800, dss dack4>


//+0.8 send(3, ..., 1, MSG_OOB) = 1
//+0 > PU. 1001:1001(0) ack 1 win 450 <dss dack4 >
//+0 < . 1:1(0) ack 1001 win 257 <dss dack4>
/*
0.300 < P. 1:786(785) ack 58 win 92 <nop,nop,TS val 800 ecr 200>
0.300 > . 58:58(0) ack 786 <nop,nop,TS val 300 ecr 800>
 */